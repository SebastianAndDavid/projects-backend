// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projects {
  id Int @id @default(autoincrement())
  name String
  description String?
  street String
  apt String?
  city String
  state String
  zip_code String
  deposit String
  createdAt DateTime @default(now())
  homeowners Homeowners[]
  phases Phases[]
}

model Homeowners {
  id Int @id @default(autoincrement())
  first_name String
  last_name String
  company String?
  email String
  phone String
  street String
  apt String?
  city String
  state String
  zip_code String
  createdAt DateTime @default(now())
  projects Projects[]
  }

model PhasesReadOnly {
  id Int @id @default(autoincrement())
  name String
  goal String
  MilestonesReadOnly MilestonesReadOnly[]
}

model MilestonesReadOnly {
  id Int @id @default(autoincrement())
  name String
  phase PhasesReadOnly @relation(fields: [phaseId], references: [id], onDelete: Cascade)
  phaseId Int
  TasksReadOnly TasksReadOnly[]
}

model TasksReadOnly {
  id Int @id @default(autoincrement())
  name String
  milestone MilestonesReadOnly @relation(fields: [milestoneId], references: [id], onDelete: Cascade)
  milestoneId Int
}
model Phases {
  id Int @id @default(autoincrement())
  name String
  goal String
  project Projects @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
  Milestones Milestones[]
}

model Milestones {
  id Int @id @default(autoincrement())
  name String
  weekCount Int
  phase Phases @relation(fields: [phaseId], references: [id], onDelete: Cascade)
  phaseId Int
  Tasks Tasks[]
}

model Tasks {
  id Int @id @default(autoincrement())
  name String
  milestone Milestones @relation(fields: [milestoneId], references: [id], onDelete: Cascade)
  milestoneId Int
}

